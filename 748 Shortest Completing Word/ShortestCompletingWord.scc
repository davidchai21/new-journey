class Solution {
public:
    string shortestCompletingWord(string licensePlate, vector<string>& words) {
        unordered_map<char, int> m;
        for (char a: licensePlate) {
            if (isalpha(a)) m[tolower(a)]++;
        }
        string res = "";
        for (string word: words) {
            if (check(word, m)) {
                if (res.empty()) res = word;
                else res = word.size()<res.size()?word:res;
            }
        }
        return res;
    }
    
    bool check(string word, unordered_map<char, int>& m) {
        for (auto it = m.begin(); it!= m.end(); it++) {
            if (count(word.begin(), word.end(), it->first)<it->second) return false;
        }
        return true;
    }
};